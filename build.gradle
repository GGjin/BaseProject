// Top-level build file where you can add configuration options common to all sub-projects/modules.

// Define versions in a single place


buildscript {
    println("${project.name}: buildscript")

    // 导入 external 全局变量
    apply from: "ext.gradle"

    repositories {
        jcenter()
        google()
    }
    dependencies {
        classpath _android.plugin

        classpath _kotlin.kotlin_gradle_plugin
        classpath _kotlin.kotlin_android_extensions

    }
}

allprojects {
    repositories {
        jcenter()
        maven { url "https://jitpack.io" }
        maven { url "https://oss.sonatype.org/content/repositories/snapshots/" }
        mavenCentral()
        google()
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}

subprojects {
    def isAppModule = it.name == 'app'
    apply plugin: isAppModule ? 'com.android.application' : 'com.android.library'

    apply plugin: 'kotlin-android'
    apply plugin: 'kotlin-android-extensions'   // 拓展

    // kapt
    apply plugin: 'kotlin-kapt'
//    if (isAppModule)
    kapt {
//        arguments {
//            arg('eventBusIndex', 'com.anpxd.ewalker.utils.MyEventBusIndex')
//        }
        generateStubs = true
    }

    android {

        compileSdkVersion _android.compileSdkVersion as Integer
        buildToolsVersion _android.buildToolsVersion as String

        defaultConfig {
            if (isAppModule)
                applicationId "com.gg.baseproject"


            minSdkVersion _android.minSdkVersion as Integer
            targetSdkVersion _android.targetSdkVersion as Integer
            versionCode _android.versionCode as Integer
            versionName _android.versionName as String

            multiDexEnabled true
            vectorDrawables.useSupportLibrary = true

        }

        sourceSets {
            main.java.srcDirs += 'src/main/kotlin'
            if (isAppModule){
                main {
                    jniLibs.srcDirs = ['libs']
                }
            }
        }

        compileOptions {
            sourceCompatibility JavaVersion.VERSION_1_8
            targetCompatibility JavaVersion.VERSION_1_8
        }

        if(isAppModule){
            dataBinding {
                enabled true
            }
        }
    }

    dependencies {
        // kotlin
        implementation _kotlin.kotlin_stdlib

        /******* rx ****************************************************************************/
        implementation rx.rxjava2
        implementation rx.rxandroid2

        // ViewModel and LiveData
        implementation lifecycle.extensions
        kapt lifecycle.compiler

        kapt databindingCompiler

    }

    repositories {
        mavenCentral()
    }

}
//apply from: "https://raw.githubusercontent.com/fashare2015/gradle-screen-record/master/screen-record.gradle"

